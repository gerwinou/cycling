boxplot(Ozone~Month,airquality,xlab = "Month",ylab = "Ozone (ppb)",col.axis = "blue", col.lab = "red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City"))
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
lenght(par())
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may<-airquality$Month == 5
may<-subset(airquality,Month == 5)
points(airquality$wind,airquality$Ozone)
points(airquality$wind,airquality$Ozone,col="blue")
points(may$wind,may$Ozone,col="blue")
n
next
points(may$wind,may$Ozone,col="blue",pch="1")
dim(may)
points(may$Wind,may$Ozone,col="blue",pch=17)
may<-subset(airquality,Month != 5)
may<-subset(airquality,Month == 5)
notmay<-subset(airquality,Month != 5)
points(notmay$Wind,notmay$Ozone,col="blue",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend = "May","Other Months")
legend("topright",pch=c(17,8),col=c("blue","red"),legend = c("May","Other Months")
)
hline
abline(y,lty=2, ldw=2)
abline(ylab,lty=2, ldw=2)
help
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Slar.R,main="Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York city", outer = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, airquality, layout = c(5,1))
p<-xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[[x.limits]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R",local=TRUE))
source(pathtofile("plot1.R",local="TRUE"))
source(pathtofile("plot1.R"),local=TRUE))
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local  = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit(myLabels.R)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color * cut,diamonds,strip=FALSE,pch=20,xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color * cut,diamonds,pch=20,xlab = myxlab, ylab = myylab, main = mymain)
sample(colors())
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p<-colorRampPalette(c("red","blue"))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
0x33
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
showMe(p2(20))
showMe(p2(18))
showMe(p2(10))
?rgb
p3<-colorRampPalette(c("blue","green",alpha=0.5))
p3<-colorRampPalette(c("blue","green"),alpha=0.5)
p3(5)
plot(x,y,pch=19,col=rgb(c(0,.5,.5)))
plot(x,y,pch=19,col=rgb(c(0,0,.5,.5)))
plot(x,y,pch=19,col=rgb(c(0,1,.5,.5)))
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols<- brewer.pal(3,BuGn)
cols<- brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col(pal(20)))
image(volcano,col=(pal(20)))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
delete.response()
delete.response("Gerwin")
delete.progress("Gerwin")
delete_progress("Gerwin")
swirl()
swirl()
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth") )
qplot(y=hwy,data=mpg,color=drv )
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ ~ hwy,data=mpg,facets = . ~ drv)
qplot(displ, hwy,data=mpg,facets = . ~ drv)
qplot(hwy,data=mpg, facets= drv ~ ., binwidth = 2)
qplot(data ~ displ,hwy, data=mpg,geom(c("point","smooth")),facets= .~drv,"loess")
qplot(displ,hwy, data=mpg,geom(c("point","smooth")),facets= .~drv,"loess")
qplot(displ,hwy, data=mpg,geom(c("point","smooth")),facets= .~drv,"loess")
qplot(displ,hwy, data=mpg,geom(c("point","smooth")),"loess")
qplot(displ,hwy, mpg,geom(c("point","smooth")),facets= .~drv,"loess")
qplot(displ,hwy, data=mpg,geom(c("point","smooth")),facets=.~drv,"loess")
qplot(displ,hwy, data=mpg,geom(c("point","smooth")),facets=.~drv)
qplot(displ,hwy,data=mpg,geom(c("point","smooth")),facets=.~drv,"loess")
next()
data(mg1)
data(mpg)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,"loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
dim(mpg)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
?qplot
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method = "loess")
next()
nxt(0)
skip
skip()
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method = "loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, "loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
info()
skip()
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, "loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method=loess)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method="lm")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method='loess')
ggplot2(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method='loess')
ggplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method='loess')
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method='loess')
?qplot
nxt()
nxt()
skip()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method='loess')
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method="loess")
nxt()
AnswerTest
AnswerTests
AnswerTests()
reset
skip
skip()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv, method='loess')0
0
swirl()
2
swirl()
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
range(diamonds$price,binwidth=18497/30)
range(price,binwidth=18497/30)
range(price,data=diamonds,binwidth=18497/30)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut
)
0
bye()
find.package(swirl)
find.package("swirl"
)
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
bye
bye()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
info()
skip()
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
bye()
delete_progress(Gerwin)
delete_progress("Gerwin")
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point() + geom_smooth()
g+geom_point() + geom_smooth(method="lm")
g+geom_point() + geom_smooth(method="lm") + facet_grid(.~drc)
g+geom_point() + geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point() + geom_smooth(method="lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2) + geom_smooth(method="lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv), size =, alpha = 1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv), size =2, alpha = 1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv)) + theme_bw(base_family = "Times")
bye()
g+geom_point(aes(color=drv)) + theme_bw(base_family = "Times")
g+geom_point(aes(color=drv), size =2, alpha = 1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(size=4,alpha=1/2,aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement",y="Hwy Mileage")
swirl()
qplot(myx,myy,type='l',ylim=c(-3,3))
qplot(myx,myy,type="l",ylim=c(-3,3))
ggplot2(myx,myy,type="l",ylim=c(-3,3))
ggplot(myx,myy,type="l",ylim=c(-3,3))
helpme
hist(xmyz)
hist(myx)
plot(myx,myy,type="l",ylim=c(-3,3))
g<=ggplot(testdat,aes(x=myx,y=myy))
g<=ggplot(testdat,aes(myx,myy))
g<=ggplot(testdat,aes(myx,myy)
)
g<=ggplot(testdat)
g<-ggplot(testdat,aes(x=myx,y=myy))
g + geom_line
g + geom_line()
g + geom_line() + ylim(-3,3)
g+coord_cartesian(ylim=c(-3,3))
g+geom_line()coord_cartesian(ylim=c(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot
ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g<-geom_point
g<-geom_point()
g + geom_point()
g + geom_point() = facet_grid(drv~cyl,margins = TRUE)
g + geom_point() + facet_grid(drv~cyl,margins = TRUE)
g + geom_point() + facet_grid(drv~cyl,margins = TRUE)+ geom_smooth(method="lm",se=FALSE,size=2,color="black")
g + geom_point() + facet_grid(drv~cyl,margins = TRUE)+ geom_smooth(method="lm",se=FALSE,size=2,color="black") + labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
hist(price,data=diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"))
nxt()
bye()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"))
bye()
delete_progress("Gerwin")
swirl()
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(cara,price,data=diamonds)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom=c("smooth","point"))
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"))
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),facets=. ~cut
)
nxt()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),facets=. ~cut
)
bye()
detach("package:swirl", unload=TRUE)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),facets=. ~cut
)
bye
detach("package:swirl", unload=TRUE)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),facets=. ~cut
)
bye()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),facets=. ~cut)
bye()
delete_progress("Gerwin")
swirl()
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut
)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut
)
qplot(carat,price,data=diamonds,color=cut
)
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"))
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),facets=.~cut
)
g<-ggplot(diamonds,aes(depth,price))
summary(g)
g + geom_point(alpha=1/3)
cutpoints <-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds,depth,price)
g <- ggplot(diamonds,aes(depth,price))
g+ geom_points(alpho = 1/3) + facet_grid(cut ~ car2)
g+ geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g+ geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method="lm",size=3, color="pink")
ggplot(data=diamonds,aes(carat,price))
ggplot(data=diamonds,aes(carat,price))+geom_boxplot()+face_grid(.~cut())
ggplot(data=diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
dist(dataFrame)
hc<- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
5
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix)
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,pch=8,cex=2,col=cols1,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,pch=9,cex=2,col=cols1,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
source('~/Documents/data analysis/cycling/R/cumulatedDistance.R', echo=TRUE)
source('~/Documents/data analysis/cycling/R/cumulatedDistance.R', echo=TRUE)
source('~/Documents/data analysis/cycling/R/cumulatedElevation.R', echo=TRUE)
View(data)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
scale(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
help()
test.for.zero()
test
a1<-dim(dataFrame)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a1<-dim(dataFrame)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
ssd[562,563]
ssd[562:563]
names(ssd[562:563])
table(ssd$subject)
bye()
swirl()
sum(table(ssd$subject))
table(ssd$activity)
sub1<- subset(ssd,subject==1)
dim(sub1)
names(subset(sub1[1:12]))
names((sub1[1:12]))
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1;3])
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- x[,10:12]
mdist <- sub1[,10:12]
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1 <- svd(sub1[,-c(562,563)])
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12),maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclusterin,lab.col = unclass(sub1$activity))
myplclust(hclustering,lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1(-c()),centers=6)
kClust<-kmeans((-c()),centers=6)
kClust<-help()
help
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster,sub1$activity)
dim(x$y)
dim(kClust$y)
dim(kClust$centers)
laying <-which(kClust$size == 29)
plot(kClust$centers[laying,1:12],pch=19,ylab= "Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12],pch = 19,ylab= "Walkdown Cluster")
bye()
